@page "/Home"

@using RBDProject.AuthFolder
@using RBDProject.Models
@using System.Text.Json
@using System.Globalization
@using System.Security.Claims

@rendermode InteractiveServer

@inject IHttpClientFactory _http
@inject IJSRuntime _jSRuntime
@inject IConfiguration? _configure
@inject NotificationService _notificationService
@inject TooltipService _tooltipService
@inject NavigationManager _navigate

<PageTitle>Home</PageTitle>

<AuthorizeView Roles="@(_configure?.GetValue<string>("Permisos:Empleado"))">
    <NotAuthorized>
        @if (context.User.Identity?.IsAuthenticated == null)
        {
            _navigate.NavigateTo("/");
        }
        else
        {
            <p>No estas autorizado</p>
        }
    </NotAuthorized>
    <Authorized>
        <section class="d-flex flex-column nowrap gap-2">

            @* CARD DE CONTABILIDAD *@
            <section class="d-flex flex-row gap-1">
                <RBDProject.Components.Cards.CardCount Title="Facturas" Body="@_Information.CountFact.ToString()" Icon="fas fa-dollar-sign fa-2x text-gray-300"></RBDProject.Components.Cards.CardCount>
                <RBDProject.Components.Cards.CardCount Title="Cuentas Por Cobrar" Body="@_Information.CountCxc.ToString()" Icon="fas fa-dollar-sign fa-2x text-gray-300"></RBDProject.Components.Cards.CardCount>
                <RBDProject.Components.Cards.CardCount Title="Articulos" Body="@_Information.CountArt.ToString()"></RBDProject.Components.Cards.CardCount>
                <RBDProject.Components.Cards.CardCount Title="Clientes" Body="@_Information.CountCli.ToString()"></RBDProject.Components.Cards.CardCount>
            </section>

            @* RECORDATORIO *@
            <section class="d-flex flex-row gap-2 flex-nowrap">

                <RadzenFieldset Text="RECORDATORIO" Style="background-color:white;">
                    <section class="d-flex flex-row gap-2 flex-nowrap w-auto">
                        @* LIST CXC *@
                        <section class="shadow w-75 p-2" style="background-color:white">
                            <div>
                                <RadzenListBox @bind-Value=@_model_CXC
                                               Data=@_listCXC_Venc
                                               TextProperty="@nameof(RbdCuentasPorCobrar.NumFact)"
                                               ValueProperty="@nameof(RbdCuentasPorCobrar.NumFact)"
                                               Multiple=true
                                               AllowClear=true
                                               Placeholder="Vencimiento De Facturas"
                                               Style="width: 100%; max-width: 400px; height: 200px"
                                               InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "select products" } })" />
                            </div>
                        </section>
                        <section class="shadow p-3" style="background-color:white;border-radius:10px;width:200px">
                            <section>
                                <label class="form-label">Opciones</label>
                            </section>
                            <section>
                                <button class="btn btn-primary">Recordatorio</button>
                            </section>
                        </section>
                    </section>
                </RadzenFieldset>

                <section class="w-50">
                    <RadzenFieldset Text="ACCESO RAPIDO" Style="background-color:white;">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <NavLink href="/CrearFactura" Match="NavLinkMatch.All">Crear Factura</NavLink>
                            </li>
                            <li class="list-group-item">
                                <NavLink href="/CuentasPorCobrar" Match="NavLinkMatch.All">Cuenta Por Cobrar</NavLink>
                            </li>
                            <li class="list-group-item">
                                <NavLink href="/Articulos" Match="NavLinkMatch.All">Articulos</NavLink>
                            </li>
                            <li class="list-group-item">
                                <NavLink href="/Clientes" Match="NavLinkMatch.All">Clientes</NavLink>
                            </li>
                        </ul>
                    </RadzenFieldset>
                </section>
            </section>

            @* CONSEJOS *@
            <RadzenFieldset Text="CONSEJOS Y RECOMENDACIONES" Style="background-color:white;">
                <section>
                    <div class="accordion" id="accordionExample">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                    Consejo #1
                                </button>
                            </h2>
                            <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                                <div class="accordion-body">
                                    <p>
                                        <ul>
                                            <li>✅ Buen uso del sistema</li>
                                            <li>Verifica siempre los datos del cliente antes de generar la factura (nombre, RNC/Cédula, dirección).</li>
                                            <li>Confirma los productos y cantidades antes de guardar la factura, para evitar anulaciones.</li>
                                            <li> Usa los atajos del sistema (si los hay) para facturar más rápido</li>
                                            <li>Guarda tus cambios frecuentemente y no cierres sesión sin finalizar tus facturas.</li>
                                        </ul>
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                    Consejo #2
                                </button>
                            </h2>
                            <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                                <div class="accordion-body">
                                    <ul>
                                        <li>✅ Seguridad y acceso</li>
                                        <li>No compartas tu usuario ni contraseña con otras personas.</li>
                                        <li>Cierra sesión al terminar tu turno para evitar accesos no autorizados.</li>
                                        <li>Mantén actualizado tu perfil (contraseña, correo de recuperación, etc.).</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                    Consejo #3
                                </button>
                            </h2>
                            <div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                                <div class="accordion-body">
                                    <ul>
                                        <li>✅ Flujo de caja</li>
                                        <li>Revisa los métodos de pago (efectivo, tarjeta, transferencia) antes de cerrar la factura.</li>
                                        <li>Entrega siempre el comprobante al cliente (impreso o digital)</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </RadzenFieldset>

            @* ESTADISTICAS *@
            <AuthorizeView Roles="Administrador" Context="authAdmin">
                <RadzenFieldset Text="ESTADISTICAS" Style="background-color:white;">
                    <section class="d-flex flex-row justify-content-center align-items-start gap-2">
                        @* GRAFICOS BARRA *@
                        <section class="w-100" style="background-color:white;border-radius:10px;">
                            <RadzenStack class="rz-p-0 rz-p-md-6 rz-p-lg-12">
                                <RadzenRow>
                                    <RadzenColumn Size="12">
                                        <h4>Ventas Diarias</h4>
                                        <RadzenChart ColorScheme="ColorScheme.Pastel">
                                            <RadzenColumnSeries Data="@Data" CategoryProperty="@nameof(WeekSell.Day)" Title="2024" LineType="LineType.Dashed" ValueProperty="@nameof(WeekSell.Cant)">
                                                <RadzenSeriesDataLabels Visible="false" />
                                            </RadzenColumnSeries>
                                            <RadzenColumnOptions Radius="5" />
                                        </RadzenChart>
                                    </RadzenColumn>
                                </RadzenRow>
                            </RadzenStack>
                        </section>

                        @* GRAFICOS DE PIE *@
                        <section class="w-100" style="background-color:white;border-radius:10px;">
                            <RadzenStack class="rz-p-0 rz-p-md-6 rz-p-lg-12" AlignItems="AlignItems.Center">
                                <RadzenStack Style="width: 100%; max-width: 600px;">
                                    <h4>Ventas Mensuales</h4>
                                    <RadzenChart ColorScheme="ColorScheme.Pastel">
                                        <RadzenPieSeries Data="@Data2" Title="Mes" CategoryProperty="@nameof(MonthShell.MONTH)" ValueProperty="@nameof(MonthShell.Cant)">
                                            <RadzenSeriesDataLabels Visible="false" />
                                        </RadzenPieSeries>
                                    </RadzenChart>
                                </RadzenStack>
                            </RadzenStack>
                        </section>
                    </section>
                </RadzenFieldset>
            </AuthorizeView>
        </section>
    </Authorized>
</AuthorizeView>





@code {
    private List<RbdCuentasPorCobrar> _listCXC_Venc { get; set; } = new List<RbdCuentasPorCobrar>();
    private List<RbdFactura> _listFact { get; set; } = new List<RbdFactura>();

    private RbdCuentasPorCobrar _model_CXC { get; set; } = new RbdCuentasPorCobrar();
    private Info _Information { get; set; } = new Info();

    private WeekSell[] Data = new WeekSell[] { new WeekSell() { Day = "1/1/1", Cant = 100 } };
    private MonthShell[] Data2 = new MonthShell[] { new MonthShell() { MONTH = "1/1/1", Cant = 100 } };

    private string _httpServidor = "Servidor";
    private string _httpInformation = "api/Information";
    private string _httpCxC = "api/CuentasPorCobrar";

    protected override async Task OnInitializedAsync()
    {
        await GetInformation();
        await GetCxC();

        StateHasChanged();
    }

    public async Task GetInformation()
    {
        using (var client = _http.CreateClient(_httpServidor))
        {
            using (var content = await client.GetAsync(_httpInformation))
            {
                if (content.IsSuccessStatusCode)
                {
                    var result = await content.Content.ReadAsStringAsync();

                    var result2 = JsonSerializer.Deserialize<Info>(result);

                    if (result2 is not null)
                    {
                        _Information = result2;

                        Data = _Information.ShellWeek;
                        Data2 = _Information.MonthSell;
                    }
                }
            }
        }
    }

    public async Task GetCxC()
    {
        using (var client = _http.CreateClient(_httpServidor))
        {
            using (var content = await client.GetAsync(_httpCxC))
            {
                if (content.IsSuccessStatusCode)
                {
                    var result = await content.Content.ReadAsStringAsync();

                    var result2 = JsonSerializer.Deserialize<List<RbdCuentasPorCobrar>>(result);

                    if (result2 is not null)
                    {
                        _listCXC_Venc = result2.Where(x => x.VencPago?.Date == DateTime.Now.Date).ToList();
                    }
                }
            }
        }
    }

}
