@using RBDProject.AuthFolder
@using RBDProject.Components.Layout
@using RBDProject.Models
@using System.Text.Json
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer

@layout EmptyLayout
@page "/"

@inject IJSRuntime _jSRuntime
@inject IHttpClientFactory _http
@inject NavigationManager _navigate
@inject AuthenticationStateProvider _provider

<section class="vh-100">
    <div class="container-fluid h-custom">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-md-9 col-lg-6 col-xl-5">
                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp"
                     class="img-fluid" alt="Sample image">
            </div>
            <div class="col-md-8 col-lg-6 col-xl-4 offset-xl-1">
                <EditForm Model="LoginRequest" OnValidSubmit="IniciarSession">
                    <DataAnnotationsValidator />
                    <!-- Email input -->
                    <div data-mdb-input-init class="form-outline mb-4">
                        <label class="form-label" for="form3Example3">Usuario</label>
                        <InputText class="form-control form-control-lg" placeholder="Usuario" @bind-Value=@LoginRequest.Username></InputText>
                        <ValidationMessage For="(() => LoginRequest.Username)" />
                    </div>

                    <!-- Password input -->
                    <div data-mdb-input-init class="form-outline mb-3">
                        <label class="form-label" for="form3Example4">Contraseña</label>
                        <InputText class="form-control form-control-lg" placeholder="Contraseña" @bind-Value=@LoginRequest.Password></InputText>
                        <ValidationMessage For="(() => LoginRequest.Password)" />
                    </div>

                    @if (ErrorMessage != null)
                    {
                        <div class="alert alert-danger" role="alert">
                            @ErrorMessage
                        </div>
                    }

                    <div class="text-center text-lg-start mt-4 pt-2">
                        <button type="submit" data-mdb-button-init data-mdb-ripple-init disabled="@isLoading" class="btn btn-primary btn-lg"
                                style="padding-left: 2.5rem; padding-right: 2.5rem;">
                            @if (isLoading)
                            {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <span class="sr-only">Cargando...</span>
                            }
                            else
                            {
                                <span>Iniciar Session</span>
                            }
                        </button>
                    </div>

                </EditForm>
            </div>
        </div>
    </div>
</section>


@code {
    [SupplyParameterFromForm]
    private AdminLoginRequest LoginRequest { get; set; } = new();

    private string? ErrorMessage;
    private bool isLoading = false;

    private async Task IniciarSession()
    {
        try
        {
            isLoading = true;
            var customAuthenticationStateProvider = (CustomAuthStateProvider)_provider;
            var token = await customAuthenticationStateProvider.Login(LoginRequest.Username, LoginRequest.Password);

            _navigate.NavigateTo("/postlogin?Token=" + token);
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
            var a = _jSRuntime.InvokeVoidAsync("RecargarPagina");
        }
    }

    private class AdminLoginRequest
    {
        [Required]
        public string Username { get; set; } = string.Empty;
        [Required]
        public string Password { get; set; } = string.Empty;
    }
}
