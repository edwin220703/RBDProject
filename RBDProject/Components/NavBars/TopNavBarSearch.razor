<nav class="sticky-top navbar navbar-expand-lg top-row px-4" style="background-color:#0d1b2a">
    <div class="container-fluid">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse d-flex flex-row gap-2 flex-nowrap justify-content-end align-items-end" id="navbarSupportedContent">
            <button class="btn btn-primary">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-bar-left" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M12.5 15a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 1 0v13a.5.5 0 0 1-.5.5M10 8a.5.5 0 0 1-.5.5H3.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L3.707 7.5H9.5a.5.5 0 0 1 .5.5" />
                </svg>
            </button>
            <select class="form-select" aria-label="Default select example" @bind=@valor style="width:auto;">
                @if (valoresDeBusqueda.Count == 0)
                {
                    <option value="1" selected>Id</option>
                    <option value="2">Nombre</option>
                }
                else
                {
                    @foreach(KeyValuePair<string,int> vdb in valoresDeBusqueda)
                    {
                        <option value="@vdb.Value">@vdb.Key</option>
                    }
                }
            </select>
            <form class="d-flex" role="search">
                <input class="form-control me-2" type="search" placeholder="Buscar" @onkeydown="@Enter" @bind-value="@textobuscar" aria-label="Search" />
                <button class="btn btn-outline-success" type="button" @onclick=@(() => Search.InvokeAsync((valor, textobuscar)))>Buscar</button>
            </form>
        </div>
    </div>
</nav>

@code {
    private int valor { get; set; } = 1;

    private string textobuscar { get; set; } = string.Empty;

    [Parameter]
    public Dictionary<string, int> valoresDeBusqueda { get; set; } = new Dictionary<string, int>();

    [Parameter]
    public EventCallback<(int, string)> Search { get; set; }

    public async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            Search.InvokeAsync((valor, textobuscar));
        }
    }
}
